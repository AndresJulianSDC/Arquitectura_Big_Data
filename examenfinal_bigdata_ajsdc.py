# -*- coding: utf-8 -*-
"""ExamenFinal_BigData_AJSDC.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DZC8IBPk9RXbTjfhJ3wtteBnNeC8QzUJ
"""

#Limpieza de datos en python

import pandas as pd
import numpy as np

#Se sube los datos
import pandas as pd
datos=pd.read_excel("/content/marketing_campaign.xlsx")
datos

#notnull nos permite detectar datos nulos, simplificando este proceso Independientemente de la dimensión
datos.notnull()

datos.dropna()

datos.fillna(value=100)

print(datos.describe)

datos.hist()

datos.count()

datos.sum()

datos.mean()

datos.max()

datos.min()

import matplotlib.pyplot as plt
import numpy as np
fig, ax = plt.subplots()
ax.scatter([datos.ID],[datos.Year_Birth])
plt.show()

import matplotlib.pyplot as plt
import numpy as np
fig, ax = plt.subplots()
ax.scatter([datos.ID],[datos.NumCatalogPurchases])
plt.show()

import matplotlib.pyplot as plt
import numpy as np
fig, ax = plt.subplots()
ax.scatter([datos.ID],[datos.NumDealsPurchases])
plt.show()

import matplotlib.pyplot as plt
import numpy as np
fig, ax = plt.subplots()
ax.scatter([datos.ID],[datos.NumStorePurchases])
plt.show()

import matplotlib.pyplot as plt
import numpy as np
fig, ax = plt.subplots()
ax.scatter([datos.ID],[datos.NumWebVisitsMonth])
plt.show()

import matplotlib.pyplot as plt
import numpy as np
fig, ax = plt.subplots()
ax.scatter([datos.ID],[datos.NumWebPurchases])
plt.show()

import matplotlib.pyplot as plt
fig, ax = plt.subplots()
ax.violinplot([datos.Year_Birth])
plt.show()

import matplotlib.pyplot as plt
import numpy as np
fig, ax = plt.subplots()
ax.violinplot([datos.NumCatalogPurchases])
plt.show()

import matplotlib.pyplot as plt
import numpy as np
fig, ax = plt.subplots()
ax.violinplot([datos.NumDealsPurchases])
plt.show()

import matplotlib.pyplot as plt
import numpy as np
fig, ax = plt.subplots()
ax.violinplot([datos.NumStorePurchases])
plt.show()

import matplotlib.pyplot as plt
import numpy as np
fig, ax = plt.subplots()
ax.violinplot([datos.NumWebVisitsMonth])
plt.show()

import matplotlib.pyplot as plt
import numpy as np
fig, ax = plt.subplots()
ax.violinplot([datos.NumWebPurchases])
plt.show()

import matplotlib.pyplot as plt
fig, ax = plt.subplots()
ax.boxplot([datos.Year_Birth])
plt.show()

import matplotlib.pyplot as plt
import numpy as np
fig, ax = plt.subplots()
ax.boxplot([datos.NumCatalogPurchases])
plt.show()

import matplotlib.pyplot as plt
import numpy as np
fig, ax = plt.subplots()
ax.boxplot([datos.NumDealsPurchases])
plt.show()

import matplotlib.pyplot as plt
import numpy as np
fig, ax = plt.subplots()
ax.boxplot([datos.NumStorePurchases])
plt.show()

import matplotlib.pyplot as plt
import numpy as np
fig, ax = plt.subplots()
ax.boxplot([datos.NumWebVisitsMonth])
plt.show()

import matplotlib.pyplot as plt
import numpy as np
fig, ax = plt.subplots()
ax.boxplot([datos.NumWebPurchases])
plt.show()

import matplotlib.pyplot as plt
fig, ax = plt.subplots()
ax.boxplot([datos.NumStorePurchases])
plt.show()

import matplotlib.pyplot as plt
fig, ax = plt.subplots()
id = [datos.Recency]
ventas = {'store' : [datos.NumStorePurchases], 'web': [datos.NumWebPurchases]}
ax.plot(id, ventas['store'], color = 'tab:purple')
ax.plot(id, ventas['web'], color = 'tab:green')
plt.show()

import matplotlib.pyplot as plt
import numpy as np
from mpl_toolkits.mplot3d import axes3d
fig = plt.figure()
ax = fig.add_subplot(111, projection = '3d')

x1 = [datos.ID]
y1 = [datos.NumWebPurchases]
z1 = np.random.randint(2240, size=2240)

x2 = [datos.ID]
y2 = [datos.NumCatalogPurchases]
z2 = np.random.randint(2240, size=2240)

x3 = [datos.ID]
y3 = [datos.NumStorePurchases]
z3 = np.random.randint(2240, size=2240)

ax.scatter(xl, y1, z1, c='b', marker='o', label='NumCatalogPurchases')
ax.scatter(x2, y2, z2, c='g', marker='x', label='NumWebPurchases')
ax.scatter(x3, y3, z3, c='r', marker='2', label='NumStorePurchases')

ax.set_xlabel('ID')
ax.set_ylabel('Ventas')
ax.set_zlabel('z datos')
plt.title("3D Número de Ventas")
plt.legend()
plt.tight_layout()
plt.show( )